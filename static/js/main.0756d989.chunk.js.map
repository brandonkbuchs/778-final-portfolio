{"version":3,"sources":["components/SideBar/styles.js","components/SideBar/SideBar.js","components/SideBar/index.js","components/UserHeader/styles.js","components/UserHeader/index.js","components/UserHeader/UserHeader.js","components/MobileNav/styles.js","components/MobileNav/index.js","components/MobileNav/MobileNav.js","components/Layout/styles.js","components/Layout/index.js","components/Layout/Layout.js","styles.js","Pages/Awards/styles.js","Pages/Awards/index.js","Pages/Awards/Awards.js","Pages/Me/styles.js","Pages/Me/index.js","Pages/Me/Me.js","Pages/Projects/styles.js","Pages/Projects/index.js","Pages/Projects/Projects.js","Pages/Work/styles.js","Pages/Work/index.js","Pages/Work/Work.js","Pages/Education/styles.js","Pages/Education/index.js","Pages/Education/Education.js","Pages/Volunteer/styles.js","Pages/Volunteer/index.js","Pages/Volunteer/Volunteer.js","Pages/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledSideNav","styled","SideNav","items","name","path","SideBar","location","useLocation","isFixedNav","expanded","isChildOfHeader","aria-label","map","i","isActive","pathname","element","Link","to","key","HeaderContainer","div","isHome","Header","Image","img","ViewResumeLink","a","UserHeader","user","src","basics","picture","alt","href","username","target","rel","label","region","yearsOfExperience","headline","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltipPosition","Code32","Portfolio32","Education32","StyledContent","Content","Layout","children","SectionTitle","h3","Paragraph","p","Pill","span","AwardItem","li","white","AwardTitle","h4","Awards","awards","award","title","fullDate","month","year","summary","ProfileLink","Me","skills","skill","level","profiles","profile","network","url","ProjectItem","ProjectTitle","SkillContainer","ImageContainer","StyledImage","Projects","projects","project","githubUrl","description","images","image","k","resolutions","desktop","thumbnail","width","height","languages","libraries","item","j","WorkItem","WorkTitle","JobTitle","Work","work","position","company","start","end","EducationItem","Institution","Degree","Education","education","studyType","area","replace","VolunteerItem","VolunteerTitle","OrganizationTitle","Volunteer","volunteer","organization","Pages","exact","App","useState","setUser","useEffect","fetch","then","res","json","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0756d989.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {SideNav} from 'carbon-components-react/lib/components/UIShell';\n\nexport const StyledSideNav = styled(SideNav)`\n    @media (max-width: 640px) {\n        display: none;\n    }`;\n    ","import React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport {SideNavItems, SideNavLink} from 'carbon-components-react/lib/components/UIShell';\nimport {StyledSideNav} from './styles';\n\nconst items = [\n    {name: 'Me', path: '/'},\n    {name: 'Projects', path: '/projects'},\n    {name: 'Work', path: '/work'},\n    {name: 'Education', path: '/education'},\n    {name: 'Volunteer', path: '/volunteer'},\n    {name: 'Awards', path: '/Awards'},\n];\n\nconst SideBar = () => {\n    const location = useLocation();\n\n    return (\n        <StyledSideNav isFixedNav expanded isChildOfHeader={false} aria-label=\"Side Navigation\">\n            <SideNavItems>\n                {items.map(i => (\n                    <SideNavLink\n                        isActive={\n                            location.pathname ==='/' && i.path === '/' ? true: location.pathname === i.path\n                        }\n                        element={Link}\n                        to={i.path}\n                        key={i.name}\n                    >\n                        {i.name}\n                    </SideNavLink>\n                ))}\n            </SideNavItems>\n        </StyledSideNav>\n    );\n};\n\nexport default SideBar;","import SideBar from './SideBar';\nexport default SideBar;\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media (max-width: 640px) {\n        display: ${({isHome}) => (!isHome ? 'none' : 'flex')};\n        flex-direction: column;\n    }\n    `;\n\nexport const Header = styled.div`\n    display: flex;\n\n    @media (max-width: 640px) {\n        flex-direction: column;\n    }\n    `;\n\nexport const Image = styled.img`\n    width: 200px;\n    margin-right: 1rem;\n    border-radius: 20%;\n    `;\n\nexport const ViewResumeLink = styled.a`\n    display: flex;\n    text-decoration: none;\n    padding: @0.75rem 1.5rem;\n    font-weight: bold;\n    align-items: center;\n    margin-top: 1rem;\n    border: 2px solid #2978a0;\n    background-color: #393939;\n    transition: background-color 250ms ease;\n\n    &:hover {\n        background-color: #2978a0;\n    }\n\n    svg {\n        fill: white;\n        margin-left: 8px;\n    }\n    `;","import UserHeader from './UserHeader';\nexport default UserHeader;\n","import React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport {ArrowRight16} from '@carbon/icons-react';\nimport {HeaderContainer, Header, Image, ViewResumeLink} from './styles';\n\nconst UserHeader = ({user}) => {\n    const location=useLocation();\n\n    return (\n        <HeaderContainer isHome={location.pathname === '/'}>\n            <Header>\n                <Image src={user.basics.picture} alt=\"brandonKbuchs\"/>\n                <div>\n                    <h2>{user.basics.name}</h2>\n                    <h4>\n                        <a\n                            href={`https://gitconnected.com/${user.basics.username}`}\n                            target=\"_blank\"\n                            rel=\"noreferrer noopener\"\n                        >\n                            @{user.basics.username}\n                        </a>\n                    </h4>\n                    <p>{user.basics.label}</p>\n                    <p>Problem solving in {user.basics.region}</p>\n                    <p>{user.basics.yearsOfExperience} years of experience as an analyst</p>\n                    <p>{user.basics.headline}</p>\n                </div>\n            </Header>\n            <div>\n                <ViewResumeLink\n                    href={`https://gitconnected.com/${user.basics.username}/resume`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <span>View Resume</span>\n                    <ArrowRight16 />\n                </ViewResumeLink>\n            </div>\n        </HeaderContainer>\n    );\n};\n\nexport default UserHeader;\n","import styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport Button from 'carbon-components-react/lib/components/Button';\n\nexport const Container = styled.div`\n    display: none;\n\n    @media (max-width: 640px) {\n        display: block;\n    }\n    `;\n\nexport const Spacer = styled.div`\n    height: 48px;\n    `;\n\nexport const NavWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    position: fixed;\n    width: 100vw;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    `;\n\nexport const NavLink = styled(Link)`\n    width: 25%;\n    `;\n\nexport const NavButton = styled(Button)`\n    width: 100%;\n    justify-content: center;\n    background-color: #c1c1c1;\n    color: #2978a0;\n\n    &:hover {\n        background-color: #2978a0;\n        color: #393939;\n    }\n    `;\n","import MobileNav from './MobileNav';\nexport default MobileNav;\n","import React from 'react';\nimport {User32, Code32, Portfolio32, Education32} from '@carbon/icons-react';\nimport {Container, Spacer, NavWrapper, NavButton, NavLink} from './styles';\n\nconst MobileNav = () => {\n    return (\n        <Container>\n            <Spacer />\n            <NavWrapper>\n                <NavLink to=\"/\">\n                    <NavButton\n                        hasIconOnly\n                        renderIcon={User32}\n                        iconDescription=\"Me\"\n                        tooltipPosition=\"bottom\"\n                    />\n                </NavLink>\n                <NavLink to=\"/projects\">\n                    <NavButton\n                        hasIconOnly\n                        renderIcon={Code32}\n                        iconDescription=\"Project\"\n                        tooltipPosition=\"bottom\"\n                    />\n                </NavLink>\n                <NavLink to=\"/work\">\n                    <NavButton\n                        hasIconOnly\n                        renderIcon={Portfolio32}\n                        iconDescription=\"Work\"\n                        tooltipPosition=\"bottom\"\n                    />\n                </NavLink>\n                <NavLink to=\"/education\">\n                    <NavButton\n                        hasIconOnly\n                        renderIcon={Education32}\n                        iconDescription=\"Education\"\n                        tooltipPosition=\"bottom\"\n                    />\n                </NavLink>\n            </NavWrapper>\n        </Container>\n    );\n};\n\nexport default MobileNav;","import styled from 'styled-components';\nimport {Content} from 'carbon-components-react/lib/components/UIShell';\n\nexport const StyledContent = styled(Content)`\n    min-height: 100vh;\n\n    @media (max-width: 640px) {\n        margin-left: 0 !important;\n    }\n    `;\n    ","import Layout from './Layout';\nexport default Layout\n","import React from 'react';\nimport SideBar from '../SideBar';\nimport UserHeader from '../UserHeader';\nimport MobileNav from '../MobileNav';\nimport {StyledContent} from './styles';\n\nconst Layout = ({user, children}) => {\n    return (\n        <>\n            <MobileNav />\n            <SideBar />\n            <StyledContent>\n                <UserHeader user={user} />\n                <div>{children}</div>\n            </StyledContent>\n        </>\n    );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const SectionTitle = styled.h3`\n    margin-top: 1.5rem;\n    margin-bottom: 0.5rem;\n    `;\n\nexport const Paragraph = styled.p`\n    white-space: pre-wrap;\n    `;\n\nexport const Pill = styled.span`\n    display: inline-block;\n    margin-right: 0.75rem;\n    margin-bottom: 0.75rem;\n    padding: 0.5rem 1rem;\n    background-color: #a99985;\n    color: #161616;\n    border-radius: 2px;\n    font-weight: bold;\n    `;\n\n\n","import styled from 'styled-components';\nimport {white} from '@carbon/colors';\n\nexport const AwardItem = styled.li`\n    margin-top: 1rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid ${white};\n    `;\n\nexport const AwardTitle = styled.h4`\n    font-weight: bold;\n    `;\n","import Awards from './Awards';\nexport default Awards;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport {SectionTitle, Paragraph} from '../../styles';\nimport {AwardItem, AwardTitle} from './styles';\n\nconst Awards = ({user}) => {\n    return (\n        <Layout user={user}>\n            <div>\n                <SectionTitle>Awards</SectionTitle>\n                <ul>\n                    {user.awards.map((award, i) => (\n                        <AwardItem key={i}>\n                            <AwardTitle>{award.title}</AwardTitle>\n                            <div>\n                                <span>\n                                    {award.fullDate.month} / {award.fullDate.year}\n                                </span>\n                                <Paragraph>{award.summary}</Paragraph>\n                            </div>\n                        </AwardItem>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Awards;\n","import styled from 'styled-components';\n\nexport const ProfileLink = styled.li`\n    margin-rigth: 0.5rem;\n    margin-bottom: 0.5rem;\n    display: inline-block;\n    font-size: 18px;\n    `;\n","import Me from './Me';\nexport default Me;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport {SectionTitle, Paragraph, Pill} from '../../styles';\nimport {ProfileLink} from './styles';\n\nconst Me = ({user}) => {\n    return (\n        <Layout user={user}>\n            <div>\n                <SectionTitle>About</SectionTitle>\n                <Paragraph>{user.basics.summary}</Paragraph>\n            </div>\n            <div>\n                <SectionTitle>Skills</SectionTitle>\n                <div>\n                    {user.skills.map(skill => (\n                        <Pill key={skill.name}>{skill.name}: {skill.level}</Pill>\n                    ))}\n                </div>\n            </div>\n            <div>\n                <SectionTitle>Connect With Me</SectionTitle>\n                <ul>\n                    {user.basics.profiles.map((profile, i) => (\n                        <ProfileLink key={profile.network}>\n                            {i !== 0 && ' | '}\n                            <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\n                                {profile.network}\n                            </a>\n                        </ProfileLink>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Me;\n","import styled from 'styled-components';\nimport {white} from '@carbon/colors';\n\nexport const ProjectItem = styled.li`\n    margin-top: 1rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid ${white};\n    `;\n\nexport const ProjectTitle = styled.h4`\n    font-weight: bold;\n    `;\n\nexport const SkillContainer = styled.div`\n    margin-top: 1.2rem;\n    `;\n\nexport const ImageContainer = styled.div`\n    margin-top: 1.2rem;\n    `;\n\nexport const StyledImage = styled.img`\n    margin: 15px;\n    `;\n","import Projects from './Projects';\nexport default Projects;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport {SectionTitle, Pill} from '../../styles';\nimport {ImageContainer, StyledImage, ProjectItem, ProjectTitle, SkillContainer} from './styles';\n\nconst Projects = ({user}) => {\n    return (\n        <Layout user={user}>\n            <div>\n                <SectionTitle>Projects</SectionTitle>\n                <ul>\n                    {user.projects.map((project, i) => (\n                        <ProjectItem key={i}>\n                            <ProjectTitle>\n                                <a href={project.githubUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n                                    {project.name}\n                                </a>\n                            </ProjectTitle>\n                            <p>{project.summary}</p>\n                            <p>{project.description}</p>\n                            <ImageContainer>\n                                {project.images.map((image, k) => (\n                                    <a href={image.resolutions.desktop.url} target=\"_blank\" rel=\"noreferrer noopener\">\n                                        <StyledImage src={image.resolutions.thumbnail.url} width={image.resolutions.thumbnail.width} height={image.resolutions.thumbnail.height} />\n                                    </a>\n                                ))}\n                            </ImageContainer>\n                            <SkillContainer>\n                                {[...project.languages, ...project.libraries].map((item, j) => (\n                                    <Pill key={j}>{item}</Pill>\n                                ))}\n                            </SkillContainer>\n                        </ProjectItem>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Projects;","import styled from 'styled-components';\nimport {white} from '@carbon/colors';\n\nexport const WorkItem = styled.li`\n    margin-top: 1rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid ${white};\n    `;\n\nexport const WorkTitle = styled.h4`\n    font-weight: Bold;\n    `;\n\nexport const JobTitle = styled.p`\n    font-weight: bold;\n    display: inline-block;\n    `;\n\n","import Work from './Work';\nexport default Work;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport {SectionTitle, Paragraph} from '../../styles';\nimport {WorkItem, WorkTitle, JobTitle} from './styles';\n\nconst Work = ({user}) => {\n    return (\n        <Layout user={user}>\n            <div>\n                <SectionTitle>Work</SectionTitle>\n                <ul>\n                    {user.work.map((work, i) => (\n                        <WorkItem key={i}>\n                            <WorkTitle>{work.position}</WorkTitle>\n                            <div>\n                                <JobTitle>{work.company}</JobTitle> <span>{work.location}</span>\n                                <span> &sdot; </span>\n                                <span>\n                                    {work.start.year} to {work.end.year}\n                                </span>\n                            </div>\n                            <Paragraph>{work.summary}</Paragraph>\n                        </WorkItem>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Work;","import styled from 'styled-components';\nimport {white} from '@carbon/colors';\n\nexport const EducationItem = styled.li`\n    margin-top: 1rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px solid ${white};\n    `;\n\nexport const Institution = styled.h4`\n    font-weight: bold;\n    `;\n\nexport const Degree = styled.p`\n    font-weight: bold;\n    display: inline-block;\n    `;\n\n    ","import Education from './Education';\nexport default Education;\n","import React from 'react';\nimport Layout from '../../components/Layout';\nimport {SectionTitle, Paragraph} from '../../styles';\nimport {EducationItem, Institution, Degree} from './styles';\n\nconst Education = ({user}) => {\n    return (\n        <Layout user={user}>\n            <div>\n                <SectionTitle>Education</SectionTitle>\n                <ul>\n                    {user.education.map((education, i) => (\n                        <EducationItem key={i}>\n                            <Institution>{education.position}</Institution>\n                            <div>\n                                <Degree>\n                                    {education.studyType}, {education.area}\n                                </Degree>{' '}\n                                <span> &sdot; </span>\n                                <span>\n                                    {education.start.year} to {education.end.year}\n                                </span>\n                            </div>\n                            <Paragraph>{education.description.replace('\\n\\n', '\\n')}</Paragraph>\n\n                        </EducationItem>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Education;","import styled from 'styled-components';\nimport {white} from '@carbon/colors';\n\nexport const VolunteerItem = styled.li`\n    margin-top: 1rem;\n    padding-botom: 1rem;\n    border-bottom: 1px solid ${white};\n    `;\n\nexport const VolunteerTitle = styled.h4`\n    font-weight: bold;\n    `;\n\nexport const OrganizationTitle = styled.p`\n    font-weight: bold;\n    display: inline-block;\n    `;","import Volunteer from './Volunteer';\nexport default Volunteer;","import React from 'react';\nimport Layout from '../../components/Layout';\nimport {SectionTitle, Paragraph} from '../../styles';\nimport {OrganizationTitle, VolunteerItem, VolunteerTitle} from './styles';\n\nconst Volunteer = ({user}) => {\n    return (\n        <Layout user={user}>\n            <div>\n                <SectionTitle>Volunteer Work</SectionTitle>\n                <ul>\n                    {user.volunteer.map((volunteer, i) => (\n                        <VolunteerItem key={i}>\n                            <VolunteerTitle>{volunteer.position}</VolunteerTitle>\n                            <div>\n                                <OrganizationTitle>{volunteer.organization}</OrganizationTitle> <span>{volunteer.location}</span>\n                                <span> &sdot; </span>\n                                <span>\n                                    {volunteer.start.year} to {volunteer.end.year}\n                                </span>\n                            </div>\n                            <Paragraph>{volunteer.summary}</Paragraph>\n                        </VolunteerItem>\n                    ))}\n                </ul>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Volunteer;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Awards from './Awards';\nimport Me from './Me';\nimport Projects from './Projects';\nimport Work from './Work';\nimport Education from './Education';\nimport Volunteer from './Volunteer';\n\nconst Pages = ({user}) => {\n    return(\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Me user={user} />\n                </Route>\n                <Route path=\"/projects\">\n                    <Projects user={user} />\n                </Route>\n                <Route path=\"/work\">\n                    <Work user={user} />\n                </Route>\n                <Route path=\"/education\">\n                    <Education user={user} />\n                </Route>\n                <Route path=\"/volunteer\">\n                    <Volunteer user={user} />\n                </Route>\n                <Route path=\"/awards\">\n                    <Awards user={user} />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Pages;\n","import React, {useState, useEffect} from 'react';\nimport Pages from './Pages';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetch('https://gitconnected.com/v1/portfolio/brandonkbuchs')\n      .then(res => res.json())\n      .then(user => {\n        setUser(user);\n      });\n  }, []);\n\n  if (!user) {\n    return <div />;\n  }\n\n  return <Pages user={user} />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}